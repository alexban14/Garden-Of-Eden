name: 'User Management'
description: |-

  APIs to manage the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of users'
      description: 'Gets a list of users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Defaults to 20. Example 20'
        required: false
        example: 17
        type: integer
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: 18
        type: integer
        custom: []
    cleanQueryParameters:
      page_size: 17
      page: 18
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":64,"name":"Dolores McGlynn","email":"antonio38@example.com","email_verified_at":"2023-04-24T20:03:08.852343Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":65,"name":"Miss Casandra Deckow Sr.","email":"jason.lebsack@example.com","email_verified_at":"2023-04-24T20:03:08.854343Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":66,"name":"Edwardo Daugherty","email":"yost.emerson@example.com","email_verified_at":"2023-04-24T20:03:08.863201Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":67,"name":"Cary Goyette PhD","email":"arunolfsdottir@example.com","email_verified_at":"2023-04-24T20:03:08.864796Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in storage'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: true
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":68,"name":"Lillian Blick","email":"elinor11@example.com","email_verified_at":"2023-04-24T20:03:08.872957Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":69,"name":"Wilbert O''Kon","email":"rowe.eldred@example.com","email_verified_at":"2023-04-24T20:03:08.874499Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: false
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: false
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":70,"name":"Billy Anderson","email":"hailey63@example.org","email_verified_at":"2023-04-24T20:03:08.883557Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":71,"name":"Henri Okuneva V","email":"lisette21@example.org","email_verified_at":"2023-04-24T20:03:08.885193Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the user resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":72,"name":"Dr. Laurine Becker","email":"jacobi.emmanuelle@example.com","email_verified_at":"2023-04-24T20:03:08.893957Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":73,"name":"Junius Zemlak","email":"hyatt.raphael@example.net","email_verified_at":"2023-04-24T20:03:08.895478Z","created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
