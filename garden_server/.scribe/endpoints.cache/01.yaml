## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs to manage the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of users'
      description: 'Gets a list of users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Defaults to 20. Example 20'
        required: false
        example: 5
        type: integer
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: 13
        type: integer
        custom: []
    cleanQueryParameters:
      page_size: 5
      page: 13
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"name":"Prof. Jovani Turner III","email":"nhoppe@example.org","email_verified_at":"2023-04-28T07:35:54.811226Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"},{"id":12,"name":"Amari Cummerata IV","email":"bode.alexanne@example.org","email_verified_at":"2023-04-28T07:35:54.828725Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":13,"name":"Mazie Bruen","email":"peyton.balistreri@example.org","email_verified_at":"2023-04-28T07:35:54.845435Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"},{"id":14,"name":"Katrina Friesen","email":"bhand@example.org","email_verified_at":"2023-04-28T07:35:54.846530Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in storage'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: true
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":15,"name":"Jevon Weimann PhD","email":"lyric11@example.net","email_verified_at":"2023-04-28T07:35:54.853869Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"},{"id":16,"name":"Prof. Alfonso Stark","email":"jakubowski.helen@example.net","email_verified_at":"2023-04-28T07:35:54.854848Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified user from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: false
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: false
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":17,"name":"Makayla Streich","email":"lottie.sanford@example.org","email_verified_at":"2023-04-28T07:35:54.861870Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"},{"id":18,"name":"Prof. Felton Casper Sr.","email":"anjali84@example.net","email_verified_at":"2023-04-28T07:35:54.862884Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the user resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":19,"name":"Darrion Ryan IV","email":"regan87@example.org","email_verified_at":"2023-04-28T07:35:54.871089Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"},{"id":20,"name":"Arch Hirthe","email":"felicia.maggio@example.com","email_verified_at":"2023-04-28T07:35:54.872315Z","created_at":"2023-04-28T07:35:54.000000Z","updated_at":"2023-04-28T07:35:54.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
