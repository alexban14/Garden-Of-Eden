## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs to manage the user resource
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a list of users'
      description: 'Gets a list of users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Defaults to 20. Example 20'
        required: false
        example: 15
        type: integer
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: 8
        type: integer
        custom: []
    cleanQueryParameters:
      page_size: 15
      page: 8
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":22,"name":"Nash Dietrich V","email":"hadley32@example.org","email_verified_at":"2023-04-22T15:59:15.729274Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"},{"id":23,"name":"Ross Kirlin","email":"jmills@example.org","email_verified_at":"2023-04-22T15:59:15.731210Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID'
        required: true
        example: 12
        type: integer
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":24,"name":"Prof. Katrine Simonis","email":"walton22@example.com","email_verified_at":"2023-04-22T15:59:15.746539Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"},{"id":25,"name":"Kirk Ledner","email":"uhammes@example.org","email_verified_at":"2023-04-22T15:59:15.747131Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: true
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: true
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":26,"name":"Mr. Juwan Huel IV","email":"wisoky.aimee@example.com","email_verified_at":"2023-04-22T15:59:15.755229Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"},{"id":27,"name":"Nathen Carroll IV","email":"maryjane.powlowski@example.com","email_verified_at":"2023-04-22T15:59:15.755777Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the user.'
        required: false
        example: 'John Doe'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of the user.'
        required: false
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":28,"name":"Gerda Wyman","email":"marquardt.jordon@example.org","email_verified_at":"2023-04-22T15:59:15.763743Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"},{"id":29,"name":"Ms. Janiya Streich I","email":"pasquale.conn@example.com","email_verified_at":"2023-04-22T15:59:15.764587Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs to manage the user resource
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":30,"name":"Prof. Carey Turcotte III","email":"mae.bradtke@example.com","email_verified_at":"2023-04-22T15:59:15.769835Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"},{"id":31,"name":"Cathy Hilpert","email":"idella46@example.org","email_verified_at":"2023-04-22T15:59:15.770751Z","created_at":"2023-04-22T15:59:15.000000Z","updated_at":"2023-04-22T15:59:15.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
