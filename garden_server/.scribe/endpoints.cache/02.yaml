## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Comment Management'
description: |-

  APIs to manage the comments resource related to Articles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/comments
    metadata:
      groupName: 'Comment Management'
      groupDescription: |-

        APIs to manage the comments resource related to Articles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of comments.'
      description: 'Gets a list of Comments'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Defaults to 20. Example 20'
        required: false
        example: 17
        type: integer
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: 13
        type: integer
        custom: []
    cleanQueryParameters:
      page_size: 17
      page: 13
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"links":{"first":"http:\/\/localhost\/api\/v1\/comments?page=1","last":"http:\/\/localhost\/api\/v1\/comments?page=1","prev":"http:\/\/localhost\/api\/v1\/comments?page=12","next":null},"meta":{"current_page":13,"from":null,"last_page":1,"links":[{"url":"http:\/\/localhost\/api\/v1\/comments?page=12","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost\/api\/v1\/comments?page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"path":"http:\/\/localhost\/api\/v1\/comments","per_page":17,"to":null,"total":6}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Comment Management'
      groupDescription: |-

        APIs to manage the comments resource related to Articles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified comment.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Comment ID'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":11,"body":["pariatur","et","corporis","nobis","voluptas","ut","laboriosam","dignissimos","hic","nobis"],"user_id":4,"article_id":3,"created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":12,"body":["sunt","corporis","nemo","aut","est","voluptatem","aspernatur","consectetur","maiores","quae"],"user_id":4,"article_id":4,"created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/comments
    metadata:
      groupName: 'Comment Management'
      groupDescription: |-

        APIs to manage the comments resource related to Articles
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created comment in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Body of the article.'
        required: true
        example: 'The best article about improving life happiness'
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: 2
        type: integer
        custom: []
      article_id:
        name: article_id
        description: 'The Article related to the comment.'
        required: true
        example: '8'
        type: string
        custom: []
    cleanBodyParameters:
      body: 'The best article about improving life happiness'
      user_id: 2
      article_id: '8'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Comment Management'
      groupDescription: |-

        APIs to manage the comments resource related to Articles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified comment in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Body of the article.'
        required: false
        example: 'The best article about improving life happiness'
        type: string
        custom: []
    cleanBodyParameters:
      body: 'The best article about improving life happiness'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/comments/{id}'
    metadata:
      groupName: 'Comment Management'
      groupDescription: |-

        APIs to manage the comments resource related to Articles
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified comment from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the comment.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":13,"body":["quia","voluptatum","magnam","cupiditate","aut","molestiae","iure","quo","veniam","pariatur"],"user_id":8,"article_id":4,"created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"},{"id":14,"body":["aperiam","similique","voluptatem","quia","repellendus","officiis","voluptatem","delectus","quod","ut"],"user_id":3,"article_id":6,"created_at":"2023-04-24T20:03:08.000000Z","updated_at":"2023-04-24T20:03:08.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
